{"version":3,"sources":["constants/Colors.ts","constants/Themes.ts","state/FetchTranslationTable.js","state/slices.ts","components/DarkThemeButton.tsx","components/ElevateOnScroll.ts","utils/LocaleUtils.ts","constants/Locales.ts","components/AppBarTextField.tsx","components/LocaleSelect.tsx","utils/HistoryUtils.ts","components/QueryTextField.tsx","constants/Superprojects.ts","components/SuperprojectSelect.tsx","components/MainAppBar.tsx","components/TranslationTableHead.tsx","components/StatefulTranslationHeadTable.tsx","components/TranslationTableCell.tsx","components/TranslationTableRow.tsx","components/TranslationTableStyles.tsx","components/StatefulTranslationTable.tsx","components/Main.tsx","components/App.tsx","state/store.ts","utils/LocalStorageUtils.ts","index.tsx","state/FetchTranslationTable.worker.tsx"],"names":["googleBlue","googleGrey","options","mixins","toolbar","minHeight","overrides","MuiMenuItem","root","paddingTop","paddingBottom","MuiTable","tableLayout","MuiTableCell","overflowWrap","worker","fetchTranslationTable","query","locale","superproject","a","terminate","Worker","table","useDarkThemeSlice","createSlice","name","initialState","reducers","toggleDarkTheme","state","actions","querySlice","setQuery","action","payload","localeSlice","setLocale","superprojectSlice","setSuperproject","fetchTranslations","createAsyncThunk","arg","thunkApi","getState","translationsSlice","isFetching","html","extraReducers","builder","addCase","pending","fulfilled","rootReducer","combineReducers","reducer","mapDispatch","onClick","connect","useDarkTheme","props","IconButton","aria-label","color","edge","Brightness5Outlined","Brightness4Outlined","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","children","elevation","getLocaleName","match","languageCode","languageName","Iso6391","getName","countryCode","countryName","Iso31661Alpha2","getCountry","map","code","useStyles","makeStyles","theme","isLightTheme","palette","type","createStyles","inputRoot","backgroundColor","borderRadius","shape","inputInput","height","lineHeight","AppBarTextField","classes","TextField","hiddenLabel","variant","InputProps","disableUnderline","input","inputProps","placeholder","value","dispatch","onChange","useNativeSelect","isMobile","SelectItem","MenuItem","fullWidth","select","SelectProps","native","event","target","locales","key","getQueryParameters","url","URL","window","location","href","Object","fromEntries","searchParams","onSubmit","useState","setValue","debouncedOnSubmit","useCallback","debounce","autoFocus","startAdornment","InputAdornment","position","SearchOutlined","id","superprojects","appBar","background","default","memo","AppBar","className","Toolbar","Box","display","flexGrow","maxWidth","mr","TRANSLATION_COLUMNS","label","width","TableHead","TableRow","column","TableCell","style","hasTable","translations","Table","aria-hidden","TranslationTableHead","cell","matches","text","nodes","Array","lastIndex","start","end","push","substring","length","highlightMatches","component","link","rel","OpenInNewOutlined","hover","TranslationTableCell","row","emptyRow","english","translation","project","TableBody","TranslationTableRow","hasQuery","flexDirection","alignItems","justifyContent","CircularProgress","thickness","size","dangerouslySetInnerHTML","__html","TranslateOutlined","fontSize","Typography","Main","MainAppBar","createMuiTheme","primary","main","secondary","paper","useEffect","document","querySelector","setAttribute","ThemeProvider","CssBaseline","localStorageState","item","localStorage","getItem","JSON","parse","e","getLocalStorageItem","queryParametersState","pickby","undefined","preloadedState","assign","store","configureStore","subscribe","queryParameters","from","keys","delete","entries","set","history","replaceState","title","toString","setQueryParameters","throttle","setItem","stringify","ReactDOM","render","StrictMode","getElementById","addMethods","methods","module","exports","w"],"mappings":"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","file":"static/js/main.2f492861.chunk.js","sourcesContent":["export const googleBlue = {\n  300: '#8ab4f8',\n  500: '#4285f4',\n}\n\nexport const googleGrey = {\n  50: '#f8f9fa',\n  100: '#f1f3f4',\n  200: '#e8eaed',\n  300: '#dadce0',\n  400: '#bdc1c6',\n  500: '#9aa0a6',\n  600: '#80868b',\n  700: '#5f6368',\n  800: '#3c4043',\n  850: '#313235',\n  900: '#202124',\n}\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core';\n\nimport { googleBlue, googleGrey } from './Colors';\n\nconst options: ThemeOptions = {\n  mixins: {\n    toolbar: {\n      minHeight: 56,\n      '@media (min-width: 600px)': {\n        minHeight: 64,\n      },\n    },\n  },\n  overrides: {\n    MuiMenuItem: {\n      root: {\n        paddingTop: 12,\n        paddingBottom: 12,\n      },\n    },\n    MuiTable: {\n      root: {\n        tableLayout: 'fixed',\n      },\n    },\n    MuiTableCell: {\n      root: {\n        overflowWrap: 'break-word',\n      },\n    },\n  },\n};\n\n// We need a new theme instance every time we toggle dark theme.\nexport function createLightTheme() {\n  return createMuiTheme({\n    ...options,\n    palette: {\n      primary: {\n        main: googleBlue[500],\n      },\n      secondary: {\n        main: googleBlue[500],\n      },\n      background: {\n        default: '#ffffff',\n      },\n    },\n  });\n}\n\nexport function createDarkTheme() {\n  return createMuiTheme({\n    ...options,\n    palette: {\n      primary: {\n        main: googleBlue[300],\n      },\n      secondary: {\n        main: googleBlue[300],\n      },\n      background: {\n        default: googleGrey[900],\n        paper: googleGrey[800],\n      },\n      type: 'dark',\n    },\n  });\n}\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport Worker from 'workerize-loader!./FetchTranslationTable.worker';\n\nlet worker = null;\n\nexport async function fetchTranslationTable(query, locale, superproject) {\n  if (worker) {\n    worker.terminate();\n  }\n  if (!query) {\n    return '';\n  }\n  worker = Worker();\n  const table = await worker.fetchTranslationTable(query, locale, superproject);\n  worker.terminate();\n  return table;\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { fetchTranslationTable } from './FetchTranslationTable';\nimport { combineReducers } from 'redux';\n\nconst useDarkThemeSlice = createSlice({\n  name: 'useDarkTheme',\n  initialState: false,\n  reducers: {\n    toggleDarkTheme: state => !state,\n  },\n});\nexport const { toggleDarkTheme } = useDarkThemeSlice.actions;\n\nconst querySlice = createSlice({\n  name: 'query',\n  initialState: '',\n  reducers: {\n    setQuery: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setQuery } = querySlice.actions;\n\nconst localeSlice = createSlice({\n  name: 'locale',\n  initialState: '',\n  reducers: {\n    setLocale: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setLocale } = localeSlice.actions;\n\nconst superprojectSlice = createSlice({\n  name: 'superproject',\n  initialState: '',\n  reducers: {\n    setSuperproject: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setSuperproject } = superprojectSlice.actions;\n\ninterface Translations {\n  isFetching: boolean;\n  html: string;\n}\nexport const fetchTranslations = createAsyncThunk<\n    string, void, {\n  state: {\n    query: string,\n    locale: string,\n    superproject: string,\n  },\n}\n    >('fetch-translations', async (arg, thunkApi) => {\n  const { query, locale, superproject } = thunkApi.getState();\n  return await fetchTranslationTable(query, locale, superproject);\n});\nconst translationsSlice = createSlice({\n  name: 'translations',\n  initialState: {\n    isFetching: false,\n    html: '',\n  } as Translations,\n  reducers: {},\n  extraReducers: builder => builder\n      .addCase(fetchTranslations.pending, () => ({\n        isFetching: true,\n        html: '',\n      }))\n      .addCase(fetchTranslations.fulfilled, (state, action) => ({\n        isFetching: false,\n        html: action.payload,\n      })),\n});\n\nexport const rootReducer = combineReducers({\n  [useDarkThemeSlice.name]: useDarkThemeSlice.reducer,\n  [querySlice.name]: querySlice.reducer,\n  [localeSlice.name]: localeSlice.reducer,\n  [superprojectSlice.name]: superprojectSlice.reducer,\n  [translationsSlice.name]: translationsSlice.reducer,\n});\n","import { IconButton } from '@material-ui/core';\nimport { Brightness4Outlined, Brightness5Outlined } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleDarkTheme } from '../state/slices';\nimport { RootState } from '../state/store';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ninterface DispatchProps {\n  onClick: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction DarkThemeButton(props: Props) {\n  return (\n      <IconButton\n          aria-label={props.useDarkTheme ? 'Light theme' : 'Dark theme'} color='inherit' edge='end'\n          onClick={props.onClick}>\n        {props.useDarkTheme ? <Brightness5Outlined /> : <Brightness4Outlined />}\n      </IconButton>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme,\n  };\n}\n\nconst mapDispatch: DispatchProps = {\n  onClick: toggleDarkTheme,\n}\n\nexport default connect(mapState, mapDispatch)(DarkThemeButton);\n","import useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport React from 'react';\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nexport default function ElevationScroll(props: Props) {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n    return React.cloneElement(props.children, { elevation: trigger ? 4 : 0, });\n}\n","import Iso6391 from 'iso-639-1';\nimport Iso31661Alpha2 from 'iso-3166-1-alpha-2';\n\nexport function getLocaleName(locale: string): string {\n  const match = locale.match(/^([a-z]{2})(?:-([A-Z]{2}))?$/);\n  if (!match) {\n    return locale;\n  }\n  const languageCode = match[1];\n  const languageName = Iso6391.getName(languageCode);\n  const countryCode = match[2];\n  const countryName = (countryCode && Iso31661Alpha2.getCountry(countryCode)) || '';\n  if (!countryName) {\n    return languageName;\n  } else {\n    return `${languageName} (${countryName})`;\n  }\n}\n","import { getLocaleName } from '../utils/LocaleUtils';\n\nexport default [\n  'af',\n  'am',\n  'ar',\n  'as',\n  'az',\n  'be',\n  'bg',\n  'bn',\n  'bs',\n  'ca',\n  'cs',\n  'da',\n  'de',\n  'el',\n  'en-AU',\n  'en-CA',\n  'en-GB',\n  'en-IN',\n  'en-SG',\n  'en-US',\n  'en-XC',\n  'es',\n  'et',\n  'eu',\n  'fa',\n  'fi',\n  'fr',\n  'gl',\n  'gu',\n  'he',\n  'hi',\n  'hr',\n  'hu',\n  'hy',\n  'id',\n  'is',\n  'it',\n  'ja',\n  'ka',\n  'kk',\n  'km',\n  'kn',\n  'ko',\n  'ky',\n  'lo',\n  'lt',\n  'lv',\n  'mk',\n  'ml',\n  'mn',\n  'mr',\n  'ms',\n  'my',\n  'nb',\n  'ne',\n  'nl',\n  'no',\n  'or',\n  'pa',\n  'pl',\n  'pt',\n  'pt-BR',\n  'pt-PT',\n  'ro',\n  'ru',\n  'si',\n  'sk',\n  'sl',\n  'sq',\n  'sr',\n  'sv',\n  'sw',\n  'ta',\n  'te',\n  'th',\n  'tl',\n  'tr',\n  'uk',\n  'ur',\n  'uz',\n  'vi',\n  'zh-CN',\n  'zh-HK',\n  'zh-TW',\n  'zu'\n].map(code => ({\n  code,\n  name: getLocaleName(code)\n}));\n","import { BaseTextFieldProps, FilledInputProps, TextField } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport { googleGrey } from '../constants/Colors';\n\ninterface Props extends BaseTextFieldProps {\n  onBlur?: FilledInputProps['onBlur'];\n  onChange?: FilledInputProps['onChange'];\n  onFocus?: FilledInputProps['onFocus'];\n  InputProps?: Partial<FilledInputProps>;\n  inputProps?: FilledInputProps['inputProps'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const isLightTheme = theme.palette.type === 'light';\n  return createStyles({\n    inputRoot: {\n      backgroundColor: isLightTheme ? googleGrey[100] : googleGrey[850],\n      borderRadius: 2 * theme.shape.borderRadius,\n      '&:hover': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-focused': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-disabled': {\n        backgroundColor: isLightTheme ? googleGrey[50] : googleGrey[850],\n      },\n    },\n    inputInput: {\n      height: 24,\n      paddingTop: 11,\n      paddingBottom: 11,\n      lineHeight: '24px',\n    }\n  });\n});\n\nexport default function AppBarTextField(props: Props) {\n  const classes = useStyles();\n  return (\n      <TextField\n          {...props} hiddenLabel variant='filled' InputProps={{\n            ...props.InputProps,\n            disableUnderline: true,\n            classes: {\n              ...props.InputProps?.classes,\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            },\n          }} inputProps={{\n            'aria-label': props.placeholder,\n            ...props.inputProps,\n          }} />\n  );\n}\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\n\nimport locales from '../constants/Locales';\nimport { fetchTranslations, setLocale } from '../state/slices';\nimport { AppDispatch, RootState } from '../state/store';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction LocaleSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {locales.map(locale => (\n            <SelectItem key={locale.code} value={locale.code}>\n              {locale.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    value: state.locale,\n  }\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setLocale(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(LocaleSelect);\n","export function getQueryParameters(): { [key: string]: string } {\n  const url = new URL(window.location.href);\n  return Object.fromEntries(url.searchParams);\n}\n\nexport function setQueryParameters(queryParameters: { [key: string]: string }) {\n  const url = new URL(window.location.href);\n  const searchParams = url.searchParams;\n  for (const name of Array.from(searchParams.keys())) {\n    searchParams.delete(name);\n  }\n  for (const [name, value] of Object.entries(queryParameters)) {\n    searchParams.set(name, value);\n  }\n  window.history.replaceState(null, document.title, url.toString());\n}\n","import debounce from 'lodash.debounce';\nimport { InputAdornment } from '@material-ui/core';\nimport { SearchOutlined } from '@material-ui/icons';\nimport React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchTranslations, setQuery } from '../state/slices';\nimport { AppDispatch } from '../state/store';\nimport { getQueryParameters } from '../utils/HistoryUtils';\nimport AppBarTextField from './AppBarTextField';\n\ninterface DispatchProps {\n  onSubmit: (value: string) => void;\n}\n\ntype Props = DispatchProps;\n\nfunction QueryTextField(props: Props) {\n  const [value, setValue] = useState(() => getQueryParameters().query || '');\n  const debouncedOnSubmit = useCallback(debounce(props.onSubmit, 500), [props.onSubmit]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    debouncedOnSubmit(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          autoFocus fullWidth placeholder='Search' value={value} InputProps={{\n            startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchOutlined />\n                </InputAdornment>\n            ),\n      }} onChange={handleChange} />\n  );\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onSubmit(value) {\n      dispatch(setQuery(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(null, mapDispatch)(QueryTextField);\n","export default [\n  {\n    id: 'android',\n    name: 'Android',\n  },\n]\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\n\nimport superprojects from '../constants/Superprojects';\nimport { fetchTranslations, setSuperproject } from '../state/slices';\nimport { AppDispatch, RootState } from '../state/store';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction SuperprojectSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {superprojects.map(superproject => (\n            <SelectItem key={superproject.id} value={superproject.id}>\n              {superproject.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    value: state.superproject,\n  }\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setSuperproject(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(SuperprojectSelect);\n","import { AppBar, Box, Toolbar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport DarkThemeButton from './DarkThemeButton';\nimport ElevationOnScroll from './ElevateOnScroll';\nimport LocaleSelect from './LocaleSelect';\nimport QueryTextField from './QueryTextField';\nimport SuperprojectSelect from './SuperprojectSelect';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      appBar: {\n        backgroundColor: theme.palette.background.default,\n      },\n    }),\n);\n\nexport default React.memo((props: Props) => {\n  const classes = useStyles();\n  return (\n      <ElevationOnScroll>\n        <AppBar color='default' position='fixed' className={classes.appBar}>\n          <Toolbar>\n            <Box display='flex' flexGrow={1}>\n              <Box flexGrow={1} maxWidth={720} mr={1}>\n                <QueryTextField />\n              </Box>\n              <Box flexGrow={1} maxWidth={240} mr={1}>\n                <LocaleSelect />\n              </Box>\n              <Box flexGrow={1} maxWidth={240} mr={1}>\n                <SuperprojectSelect />\n              </Box>\n            </Box>\n            <DarkThemeButton />\n          </Toolbar>\n          {props.children}\n        </AppBar>\n      </ElevationOnScroll>\n  );\n});\n","import { TableCell, TableHead, TableRow } from '@material-ui/core';\nimport React from 'react';\n\ninterface TranslationColumnData {\n  name: string;\n  label: string;\n  width: string;\n}\n\nexport const TRANSLATION_COLUMNS: Array<TranslationColumnData> = [\n  {\n    name: 'english',\n    label: 'English',\n    width: '40%',\n  },\n  {\n    name: 'translation',\n    label: 'Translation',\n    width: '40%',\n  },\n  {\n    name: 'project',\n    label: 'Project',\n    width: '20%',\n  },\n];\n\nexport default React.memo(() => {\n  return (\n      <TableHead>\n        <TableRow>\n          {TRANSLATION_COLUMNS.map(column => (\n              <TableCell key={column.name} style={{ width: column.width }}>\n                {column.label}\n              </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n  );\n});\n","import { Table } from '@material-ui/core';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../state/store';\nimport TranslationTableHead from './TranslationTableHead';\n\ninterface StateProps {\n  hasTable: boolean;\n}\n\ntype Props = StateProps;\n\nfunction StatefulTranslationHeadTable(props: Props) {\n  if (props.hasTable) {\n    return (\n        <Table aria-hidden=\"true\">\n          <TranslationTableHead />\n        </Table>\n    );\n  } else {\n    return (\n        <></>\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasTable: !!state.translations.html,\n  };\n}\n\nexport default connect(mapState)(StatefulTranslationHeadTable);\n","import { IconButton, TableCell } from '@material-ui/core';\nimport { OpenInNewOutlined } from '@material-ui/icons';\nimport React from 'react';\n\nexport interface TranslationCellData {\n  text: string;\n  link: string;\n  matches?: [number, number][];\n}\n\ninterface Props {\n  cell: TranslationCellData;\n  width: string;\n}\n\nfunction highlightMatches(text: string, matches: [number, number][]): React.ReactNode {\n  const nodes = new Array<React.ReactNode>();\n  let lastIndex = 0;\n  for (const [start, end] of matches) {\n    if (lastIndex < start) {\n      nodes.push(text.substring(lastIndex, start));\n    }\n    nodes.push(<b>{text.substring(start, end)}</b>);\n    lastIndex = end;\n  }\n  if (lastIndex < text.length) {\n    nodes.push(text.substring(lastIndex));\n  }\n  return nodes;\n}\n\nexport default React.memo((props: Props) => {\n  return (\n      <TableCell style={{ width: props.width }}>\n        {props.cell.matches ? highlightMatches(props.cell.text, props.cell.matches) : props.cell.text}\n        <IconButton\n            aria-label='View source' color='inherit' component='a' edge='end' href={props.cell.link} target='_blank'\n            rel='noopener noreferrer'>\n          <OpenInNewOutlined />\n        </IconButton>\n      </TableCell>\n  );\n});\n","import { TableRow } from '@material-ui/core';\nimport React from 'react';\n\nimport TranslationTableCell, { TranslationCellData } from './TranslationTableCell';\nimport { TRANSLATION_COLUMNS } from './TranslationTableHead';\n\nexport interface TranslationRowData {\n  [key: string]: TranslationCellData;\n  english: TranslationCellData;\n  translation: TranslationCellData;\n  project: TranslationCellData;\n}\n\ninterface Props {\n  row: TranslationRowData;\n}\n\nexport default React.memo((props: Props) => {\n  return (\n      <TableRow hover>\n        {TRANSLATION_COLUMNS.map(column => (\n            <TranslationTableCell key={column.name} cell={props.row[column.name]} width={column.width} />\n        ))}\n      </TableRow>\n  );\n});\n","import { Table, TableBody } from '@material-ui/core';\nimport React from 'react';\n\nimport TranslationTableHead from './TranslationTableHead';\nimport TranslationTableRow, { TranslationRowData } from './TranslationTableRow';\n\n// We cannot use JSS styling in components rendered in web worker, because generated class names may clash with the ones\n// generated normally.\nimport './TranslationTable.css';\n\nconst emptyRow: TranslationRowData = {\n  english: {\n    text: '',\n    link: '',\n    matches: [],\n  },\n  translation: {\n    text: '',\n    link: '',\n    matches: [],\n  },\n  project: {\n    text: '',\n    link: '',\n  },\n};\n\nfunction TranslationTableStyles() {\n  // Hidden table to ensure relevant Material-UI styles are loaded.\n  return (\n      <Table style={{ display: 'none' }}>\n        <TranslationTableHead />\n        <TableBody>\n          <TranslationTableRow row={emptyRow} />\n        </TableBody>\n      </Table>\n  );\n}\n\nexport default React.memo(TranslationTableStyles);\n","import { Box, CircularProgress, Typography } from '@material-ui/core';\nimport { TranslateOutlined } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../state/store';\nimport TranslationTableStyles from './TranslationTableStyles';\n\ninterface StateProps {\n  hasQuery: boolean;\n  isFetching: boolean;\n  html: string;\n}\n\ntype Props = StateProps;\n\nfunction StatefulTranslationTable(props: Props) {\n  if (props.isFetching) {\n    return (\n        <Box flexGrow={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <CircularProgress thickness={4} size={80} />\n        </Box>\n    );\n  } else if (!props.html) {\n    return (\n        <Box flexGrow={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <TranslateOutlined color='disabled' style={{ fontSize: 240 }} />\n          <Typography color='textSecondary' variant='subtitle1'>\n            {props.hasQuery ? 'No translations found' : 'Type to start searching'}\n          </Typography>\n        </Box>\n    );\n  } else {\n    return (\n        <>\n          <TranslationTableStyles />\n          <div dangerouslySetInnerHTML={{ __html: props.html }} />\n        </>\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasQuery: !!state.query.length,\n    isFetching: state.translations.isFetching,\n    html: state.translations.html,\n  }\n}\n\nexport default connect(mapState)(StatefulTranslationTable);\n","import { Box, Toolbar } from '@material-ui/core';\nimport React from 'react';\n\nimport MainAppBar from './MainAppBar';\nimport StatefulTranslationHeadTable from './StatefulTranslationHeadTable';\nimport StatefulTranslationTable from './StatefulTranslationTable';\n\nexport default function Main() {\n  return (\n      <Box minHeight='100vh' display='flex' flexDirection='column'>\n        <MainAppBar>\n          <StatefulTranslationHeadTable />\n        </MainAppBar>\n        <Toolbar />\n        <StatefulTranslationTable />\n      </Box>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createDarkTheme, createLightTheme } from '../constants/Themes';\nimport { RootState } from '../state/store';\nimport Main from './Main';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ntype Props = StateProps;\n\nfunction App(props: Props) {\n  const theme = props.useDarkTheme ? createDarkTheme() : createLightTheme();\n  useEffect(() => {\n    document.querySelector('meta[name=\"theme-color\"]')!!.setAttribute('content', theme.palette.background.default);\n    // eslint-disable-next-line\n  }, [props.useDarkTheme]);\n  return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Main />\n      </ThemeProvider>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme\n  };\n}\n\nexport default connect(mapState)(App);\n","import pickby from 'lodash.pickby';\nimport throttle from 'lodash.throttle';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { getQueryParameters, setQueryParameters } from '../utils/HistoryUtils';\nimport { getLocalStorageItem, setLocalStorageItem } from '../utils/LocalStorageUtils';\nimport { fetchTranslations, rootReducer } from './slices';\n\nconst STATE_KEY = 'translations-state';\nconst localStorageState = getLocalStorageItem(STATE_KEY);\nconst { query, locale, superproject } = getQueryParameters();\nconst queryParametersState = pickby({ query, locale, superproject }, value => value !== undefined);\nconst preloadedState = Object.assign({}, localStorageState, queryParametersState);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n});\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nstore.subscribe(() => {\n  const { query, locale, superproject } = store.getState();\n  setQueryParameters({ query, locale, superproject });\n});\nstore.subscribe(throttle(() => {\n  const { query, translations, ...state } = store.getState();\n  setLocalStorageItem(STATE_KEY, state);\n}, 1000));\n\nif (preloadedState.query) {\n  store.dispatch(fetchTranslations());\n}\n","export function getLocalStorageItem(key: string): any | undefined {\n  const item = localStorage.getItem(key);\n  if (!item) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(item);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function setLocalStorageItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './state/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"fetchTranslationTable\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"31ad96523fb70215abbb.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}