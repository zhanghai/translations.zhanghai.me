{"version":3,"sources":["constants/Colors.ts","constants/Themes.ts","actions/index.ts","actions/FetchTranslationTable.js","components/DarkThemeButton.tsx","components/ElevateOnScroll.ts","utils/LocaleUtils.ts","constants/Locales.ts","components/AppBarTextField.tsx","components/LocaleSelect.tsx","components/QueryTextField.tsx","constants/Superprojects.ts","components/SuperprojectSelect.tsx","components/MainAppBar.tsx","components/TranslationTableHead.tsx","components/StatefulTranslationHeadTable.tsx","components/StatefulTranslationTable.tsx","components/Main.tsx","components/App.tsx","reducers/index.ts","index.tsx","utils/LocalStorageUtils.ts","actions/FetchTranslationTable.worker.tsx"],"names":["googleBlue","googleGrey","overrides","MuiMenuItem","root","paddingTop","paddingBottom","MuiTable","tableLayout","MuiTableCell","overflowWrap","ActionType","worker","fetchTranslationTable","query","locale","superproject","a","terminate","html","css","Worker","table","receiveTranslations","type","RECEIVE_TRANSLATIONS","fetchTranslations","dispatch","getState","REQUEST_TRANSLATIONS","mapDispatch","onClick","TOGGLE_DARK_THEME","connect","state","useDarkTheme","props","IconButton","aria-label","color","edge","Brightness5Outlined","Brightness4Outlined","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","children","elevation","getLocaleName","match","languageCode","languageName","Iso6391","getName","countryCode","countryName","Iso31661Alpha2","getCountry","map","code","name","useStyles","makeStyles","theme","isLightTheme","palette","createStyles","inputRoot","backgroundColor","borderRadius","shape","inputInput","height","lineHeight","AppBarTextField","classes","TextField","hiddenLabel","variant","InputProps","disableUnderline","input","inputProps","placeholder","value","onChange","SET_LOCALE","useNativeSelect","isMobile","SelectItem","MenuItem","fullWidth","select","SelectProps","native","event","target","locales","key","onSubmit","SET_QUERY","useState","setValue","debouncedOnSubmit","useCallback","debounce","autoFocus","startAdornment","InputAdornment","position","SearchOutlined","id","SET_SUPERPROJECT","superprojects","appBar","background","default","MainAppBar","memo","AppBar","className","Toolbar","Box","display","flexGrow","maxWidth","ml","TRANSLATION_COLUMNS","label","width","tableCell","paddingLeft","spacing","breakpoints","up","paddingRight","TranslationTableHead","TableHead","TableRow","column","TableCell","style","hasTable","translations","Table","aria-hidden","hasQuery","length","isFetching","useLayoutEffect","document","getElementById","createElement","head","getElementsByTagName","insertAdjacentElement","innerHTML","flexDirection","alignItems","justifyContent","CircularProgress","thickness","size","dangerouslySetInnerHTML","__html","TranslateOutlined","fontSize","Typography","Main","minHeight","ThemeProvider","createMuiTheme","primary","main","secondary","CssBaseline","defaultLocale","some","navigator","language","rootReducer","combineReducers","action","Object","assign","store","createStore","item","localStorage","getItem","JSON","parse","e","getLocalStorageItem","applyMiddleware","thunkMiddleware","subscribe","throttle","setItem","stringify","ReactDOM","render","StrictMode","addMethods","methods","module","exports","w"],"mappings":"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","file":"static/js/main.cf031bd6.chunk.js","sourcesContent":["export const googleBlue = {\n  300: '#8ab4f8',\n  500: '#4285f4',\n}\n\nexport const googleGrey = {\n  50: '#f8f9fa',\n  100: '#f1f3f4',\n  200: '#e8eaed',\n  300: '#dadce0',\n  400: '#bdc1c6',\n  500: '#9aa0a6',\n  600: '#80868b',\n  700: '#5f6368',\n  800: '#3c4043',\n  850: '#313235',\n  900: '#202124',\n}\n","import { createMuiTheme } from '@material-ui/core';\nimport { Overrides } from '@material-ui/core/styles/overrides';\n\nimport { googleBlue, googleGrey } from './Colors';\n\nconst overrides: Overrides = {\n  MuiMenuItem: {\n    root: {\n      paddingTop: 12,\n      paddingBottom: 12,\n    },\n  },\n  MuiTable: {\n    root: {\n      tableLayout: 'fixed',\n    },\n  },\n  MuiTableCell: {\n    root: {\n      overflowWrap: 'break-word',\n    },\n  },\n};\n\n// We need a new theme instance every time we toggle dark theme.\nexport function createLightTheme() {\n  return createMuiTheme({\n    palette: {\n      primary: {\n        main: googleBlue[500],\n      },\n      secondary: {\n        main: googleBlue[500],\n      },\n      background: {\n        default: 'white',\n      },\n    },\n    overrides,\n  });\n}\n\nexport function createDarkTheme() {\n  return createMuiTheme({\n    palette: {\n      primary: {\n        main: googleBlue[300],\n      },\n      secondary: {\n        main: googleBlue[300],\n      },\n      background: {\n        default: googleGrey[900],\n      },\n      type: 'dark',\n    },\n    overrides,\n  });\n}\n","import { ThunkAction } from 'redux-thunk';\n\nimport { RootState } from '../reducers';\nimport { fetchTranslationTable } from './FetchTranslationTable';\n\nexport enum ActionType {\n  TOGGLE_DARK_THEME = 'TOGGLE_DARK_THEME',\n  SET_QUERY = 'SET_QUERY',\n  SET_LOCALE = 'SET_LOCALE',\n  SET_SUPERPROJECT = 'SET_SUPERPROJECT',\n  REQUEST_TRANSLATIONS = 'REQUEST_TRANSLATIONS',\n  RECEIVE_TRANSLATIONS = 'RECEIVE_TRANSLATIONS',\n  DEFAULT = '__DEFAULT__'\n}\n\ninterface ToggleDarkThemeAction {\n  type: ActionType.TOGGLE_DARK_THEME;\n}\n\nexport function toggleDarkTheme(): ToggleDarkThemeAction {\n  return {\n    type: ActionType.TOGGLE_DARK_THEME\n  };\n}\n\ninterface SetQueryAction {\n  type: ActionType.SET_QUERY;\n  query: string;\n}\n\nexport function setQuery(query: string): SetQueryAction {\n  return {\n    type: ActionType.SET_QUERY,\n    query,\n  };\n}\n\ninterface SetLocaleAction {\n  type: ActionType.SET_LOCALE;\n  locale: string;\n}\n\nexport function setLocale(locale: string): SetLocaleAction {\n  return {\n    type: ActionType.SET_LOCALE,\n    locale,\n  };\n}\n\ninterface SetSuperprojectAction {\n  type: ActionType.SET_SUPERPROJECT;\n  superproject: string;\n}\n\nexport function setSuperproject(superproject: string): SetSuperprojectAction {\n  return {\n    type: ActionType.SET_SUPERPROJECT,\n    superproject,\n  };\n}\n\ninterface RequestTranslationsAction {\n  type: ActionType.REQUEST_TRANSLATIONS;\n}\n\nfunction requestTranslations(): RequestTranslationsAction {\n  return { type: ActionType.REQUEST_TRANSLATIONS }\n}\n\ninterface ReceiveTranslationsAction {\n  type: ActionType.RECEIVE_TRANSLATIONS;\n  html: string;\n  css: string;\n}\n\nfunction receiveTranslations(html: string, css: string): ReceiveTranslationsAction {\n  return {\n    type: ActionType.RECEIVE_TRANSLATIONS,\n    html,\n    css\n  }\n}\n\nexport function fetchTranslations(): ThunkAction<Promise<ReceiveTranslationsAction | null>, RootState, void, Action> {\n  return async (dispatch, getState) => {\n    const { query, locale, superproject } = getState();\n    dispatch(requestTranslations());\n    const { html, css } = await fetchTranslationTable(query, locale, superproject);\n    return dispatch(receiveTranslations(html, css));\n  }\n}\n\ninterface DefaultAction {\n  type: ActionType.DEFAULT;\n}\n\nexport type Action = ToggleDarkThemeAction | SetQueryAction | SetLocaleAction | SetSuperprojectAction\n    | RequestTranslationsAction | ReceiveTranslationsAction | DefaultAction\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport Worker from 'workerize-loader!./FetchTranslationTable.worker';\n\nlet worker = null;\n\nexport async function fetchTranslationTable(query, locale, superproject) {\n  if (worker) {\n    worker.terminate();\n  }\n  if (!query) {\n    return { html: '', css: '' };\n  }\n  worker = Worker();\n  const table = await worker.fetchTranslationTable(query, locale, superproject);\n  worker.terminate();\n  return table;\n}\n","import { IconButton } from '@material-ui/core';\nimport { Brightness4Outlined, Brightness5Outlined } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleDarkTheme } from '../actions';\nimport { RootState } from '../reducers';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ninterface DispatchProps {\n  onClick: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction DarkThemeButton(props: Props) {\n  return (\n      <IconButton\n          aria-label={props.useDarkTheme ? 'Light theme' : 'Dark theme'} color='inherit' edge='end'\n          onClick={props.onClick}>\n        {props.useDarkTheme ? <Brightness5Outlined/> : <Brightness4Outlined/>}\n      </IconButton>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme,\n  };\n}\n\nconst mapDispatch: DispatchProps = {\n  onClick: toggleDarkTheme,\n}\n\nexport default connect(mapState, mapDispatch)(DarkThemeButton);\n","import useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport React from 'react';\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nexport default function ElevationScroll(props: Props) {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n    return React.cloneElement(props.children, { elevation: trigger ? 4 : 0, });\n}\n","import Iso6391 from 'iso-639-1';\nimport Iso31661Alpha2 from 'iso-3166-1-alpha-2';\n\nexport function getLocaleName(locale: string): string {\n  const match = locale.match(/^([a-z]{2})(?:-([A-Z]{2}))?$/);\n  if (!match) {\n    return locale;\n  }\n  const languageCode = match[1];\n  const languageName = Iso6391.getName(languageCode);\n  const countryCode = match[2];\n  const countryName = (countryCode && Iso31661Alpha2.getCountry(countryCode)) || '';\n  if (!countryName) {\n    return languageName;\n  } else {\n    return `${languageName} (${countryName})`;\n  }\n}\n","import { getLocaleName } from '../utils/LocaleUtils';\n\nexport default [\n  'af',\n  'am',\n  'ar',\n  'as',\n  'az',\n  'be',\n  'bg',\n  'bn',\n  'bs',\n  'ca',\n  'cs',\n  'da',\n  'de',\n  'el',\n  'en-AU',\n  'en-CA',\n  'en-GB',\n  'en-IN',\n  'en-SG',\n  'en-US',\n  'en-XC',\n  'es',\n  'et',\n  'eu',\n  'fa',\n  'fi',\n  'fr',\n  'gl',\n  'gu',\n  'he',\n  'hi',\n  'hr',\n  'hu',\n  'hy',\n  'id',\n  'is',\n  'it',\n  'ja',\n  'ka',\n  'kk',\n  'km',\n  'kn',\n  'ko',\n  'ky',\n  'lo',\n  'lt',\n  'lv',\n  'mk',\n  'ml',\n  'mn',\n  'mr',\n  'ms',\n  'my',\n  'nb',\n  'ne',\n  'nl',\n  'no',\n  'or',\n  'pa',\n  'pl',\n  'pt',\n  'pt-BR',\n  'pt-PT',\n  'ro',\n  'ru',\n  'si',\n  'sk',\n  'sl',\n  'sq',\n  'sr',\n  'sv',\n  'sw',\n  'ta',\n  'te',\n  'th',\n  'tl',\n  'tr',\n  'uk',\n  'ur',\n  'uz',\n  'vi',\n  'zh-CN',\n  'zh-HK',\n  'zh-TW',\n  'zu'\n].map(code => ({\n  code,\n  name: getLocaleName(code)\n}));\n","import { BaseTextFieldProps, FilledInputProps, TextField } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport { googleGrey } from '../constants/Colors';\n\ninterface Props extends BaseTextFieldProps {\n  onBlur?: FilledInputProps['onBlur'];\n  onChange?: FilledInputProps['onChange'];\n  onFocus?: FilledInputProps['onFocus'];\n  InputProps?: Partial<FilledInputProps>;\n  inputProps?: FilledInputProps['inputProps'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const isLightTheme = theme.palette.type === 'light';\n  return createStyles({\n    inputRoot: {\n      backgroundColor: isLightTheme ? googleGrey[100] : googleGrey[850],\n      borderRadius: 2 * theme.shape.borderRadius,\n      '&:hover': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-focused': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-disabled': {\n        backgroundColor: isLightTheme ? googleGrey[50] : googleGrey[850],\n      },\n    },\n    inputInput: {\n      height: 24,\n      paddingTop: 11,\n      paddingBottom: 11,\n      lineHeight: '24px',\n    }\n  });\n});\n\nexport default function AppBarTextField(props: Props) {\n  const classes = useStyles();\n  return (\n      <TextField\n          {...props} hiddenLabel variant='filled' InputProps={{\n            ...props.InputProps,\n            disableUnderline: true,\n            classes: {\n              ...props.InputProps?.classes,\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            },\n          }} inputProps={{\n            'aria-label': props.placeholder,\n            ...props.inputProps,\n          }} />\n  );\n}\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { Action, fetchTranslations, setLocale } from '../actions';\nimport locales from '../constants/Locales';\nimport { RootState } from '../reducers';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction LocaleSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {locales.map(locale => (\n            <SelectItem key={locale.code} value={locale.code}>\n              {locale.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    value: state.locale,\n  }\n}\n\nfunction mapDispatch(dispatch: ThunkDispatch<RootState, void, Action>): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setLocale(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(LocaleSelect);\n","import debounce from 'lodash.debounce';\nimport { InputAdornment } from '@material-ui/core';\nimport { SearchOutlined } from '@material-ui/icons';\nimport React, { useCallback, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { Action, fetchTranslations, setQuery } from '../actions';\nimport { RootState } from '../reducers';\nimport AppBarTextField from './AppBarTextField';\n\ninterface DispatchProps {\n  onSubmit: (value: string) => void;\n}\n\ntype Props = DispatchProps;\n\nfunction QueryTextField(props: Props) {\n  const [value, setValue] = useState('');\n  const debouncedOnSubmit = useCallback(debounce(props.onSubmit, 500), [props.onSubmit]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    debouncedOnSubmit(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          autoFocus fullWidth placeholder='Search' value={value} InputProps={{\n            startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchOutlined />\n                </InputAdornment>\n            ),\n      }} onChange={handleChange} />\n  );\n}\n\nfunction mapDispatch(dispatch: ThunkDispatch<RootState, void, Action>): DispatchProps {\n  return {\n    onSubmit(value) {\n      dispatch(setQuery(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(null, mapDispatch)(QueryTextField);\n","export default [\n  {\n    id: 'android',\n    name: 'Android',\n  },\n]\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\nimport { ThunkDispatch } from 'redux-thunk';\n\nimport { Action, fetchTranslations, setSuperproject } from '../actions';\nimport superprojects from '../constants/Superprojects';\nimport { RootState } from '../reducers';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction SuperprojectSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {superprojects.map(superproject => (\n            <SelectItem key={superproject.id} value={superproject.id}>\n              {superproject.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    value: state.superproject,\n  }\n}\n\nfunction mapDispatch(dispatch: ThunkDispatch<RootState, void, Action>): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setSuperproject(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(SuperprojectSelect);\n","import { AppBar, Box, Toolbar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport DarkThemeButton from './DarkThemeButton';\nimport ElevationOnScroll from './ElevateOnScroll';\nimport LocaleSelect from './LocaleSelect';\nimport QueryTextField from './QueryTextField';\nimport SuperprojectSelect from './SuperprojectSelect';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      appBar: {\n        backgroundColor: theme.palette.background.default,\n      },\n    }),\n);\n\nconst MainAppBar = React.memo((props: Props) => {\n  const classes = useStyles();\n  return (\n      <ElevationOnScroll>\n        <AppBar color='default' position='fixed' className={classes.appBar}>\n          <Toolbar>\n            <Box display='flex' flexGrow={1}>\n              <Box flexGrow={1} maxWidth={720}>\n                <QueryTextField />\n              </Box>\n              <Box flexGrow={1} maxWidth={240} ml={1}>\n                <LocaleSelect />\n              </Box>\n              <Box flexGrow={1} maxWidth={240} ml={1}>\n                <SuperprojectSelect />\n              </Box>\n            </Box>\n            <DarkThemeButton />\n          </Toolbar>\n          {props.children}\n        </AppBar>\n      </ElevationOnScroll>\n  );\n});\n\nexport default MainAppBar;\n","import { TableCell, TableHead, TableRow } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\ninterface TranslationColumnData {\n  name: string;\n  label: string;\n  width: string;\n}\n\nexport const TRANSLATION_COLUMNS: Array<TranslationColumnData> = [\n  {\n    name: 'english',\n    label: 'English',\n    width: '40%',\n  },\n  {\n    name: 'translation',\n    label: 'Translation',\n    width: '40%',\n  },\n  {\n    name: 'project',\n    label: 'Project',\n    width: '20%',\n  },\n];\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      tableCell: {\n        '&:first-child': {\n          paddingLeft: theme.spacing(2),\n          [theme.breakpoints.up('sm')]: {\n            paddingLeft: theme.spacing(3),\n          },\n        },\n        '&:last-child': {\n          paddingRight: theme.spacing(2),\n          [theme.breakpoints.up('sm')]: {\n            paddingRight: theme.spacing(3),\n          },\n        },\n      },\n    }),\n);\n\nconst TranslationTableHead = React.memo(() => {\n  const classes = useStyles();\n  return (\n      <TableHead>\n        <TableRow>\n          {TRANSLATION_COLUMNS.map(column => (\n              <TableCell key={column.name} className={classes.tableCell} style={{ width: column.width }}>\n                {column.label}\n              </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n  );\n});\n\nexport default TranslationTableHead;\n","import { Table } from '@material-ui/core';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../reducers';\nimport TranslationTableHead from './TranslationTableHead';\n\ninterface StateProps {\n  hasTable: boolean;\n}\n\ntype Props = StateProps;\n\nfunction StatefulTranslationHeadTable(props: Props) {\n  if (props.hasTable) {\n    return (\n        <Table aria-hidden=\"true\">\n          <TranslationTableHead />\n        </Table>\n    );\n  } else {\n    return (\n        <></>\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasTable: !!state.translations.html,\n  };\n}\n\nexport default connect(mapState)(StatefulTranslationHeadTable);\n","import { Box, CircularProgress, Typography } from '@material-ui/core';\nimport { TranslateOutlined } from '@material-ui/icons';\nimport React, { useLayoutEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../reducers';\n\ninterface StateProps {\n  hasQuery: boolean;\n  isFetching: boolean;\n  html: string;\n  css: string;\n}\n\ntype Props = StateProps;\n\nconst STYLE_ID = 'translation-table-style'\n\nfunction StatefulTranslationTable(props: Props) {\n  useLayoutEffect(() => {\n    let style = document.getElementById(STYLE_ID);\n    if (!style) {\n      style = document.createElement('style');\n      style.id = STYLE_ID;\n      document.head.getElementsByTagName('style')[0].insertAdjacentElement('beforebegin', style);\n    }\n    style.innerHTML = props.css;\n  }, [props.css]);\n  if (props.isFetching) {\n    return (\n        <Box flexGrow={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <CircularProgress thickness={4} size={80} />\n        </Box>\n    );\n  } else if (!props.html) {\n    return (\n        <Box flexGrow={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <TranslateOutlined color='disabled' style={{ fontSize: 240 }} />\n          <Typography color='textSecondary' variant='subtitle1'>\n            {props.hasQuery ? 'No translations found' : 'Type to start searching'}\n          </Typography>\n        </Box>\n    );\n  } else {\n    return (\n        <div dangerouslySetInnerHTML={{ __html: props.html }} />\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasQuery: !!state.query.length,\n    isFetching: state.translations.isFetching,\n    html: state.translations.html,\n    css: state.translations.css,\n  }\n}\n\nexport default connect(mapState)(StatefulTranslationTable);\n","import { Box, Toolbar } from '@material-ui/core';\nimport React from 'react';\n\nimport MainAppBar from './MainAppBar';\nimport StatefulTranslationHeadTable from './StatefulTranslationHeadTable';\nimport StatefulTranslationTable from './StatefulTranslationTable';\n\nexport default function Main() {\n  return (\n      <Box minHeight='100vh' display='flex' flexDirection='column'>\n        <MainAppBar>\n          <StatefulTranslationHeadTable />\n        </MainAppBar>\n        <Toolbar />\n        <StatefulTranslationTable />\n      </Box>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { createDarkTheme, createLightTheme } from '../constants/Themes';\nimport { RootState } from '../reducers';\nimport Main from './Main';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ntype Props = StateProps;\n\nfunction App(props: Props) {\n  return (\n      <ThemeProvider theme={props.useDarkTheme ? createDarkTheme() : createLightTheme()}>\n        <CssBaseline />\n        <Main />\n      </ThemeProvider>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme\n  };\n}\n\nexport default connect(mapState)(App);\n","import { combineReducers } from 'redux';\n\nimport { Action, ActionType } from '../actions';\nimport locales from '../constants/Locales';\n\nfunction useDarkTheme(state: boolean = false, action: Action): boolean {\n  switch (action.type) {\n    case ActionType.TOGGLE_DARK_THEME:\n      return !state;\n    default:\n      return state;\n  }\n}\n\nfunction query(state: string = '', action: Action): string {\n  switch (action.type) {\n    case ActionType.SET_QUERY:\n      return action.query;\n    default:\n      return state;\n  }\n}\n\nconst defaultLocale = locales.some(locale => locale.code === navigator.language) ? navigator.language : 'zh-CN';\n\nfunction locale(state: string = defaultLocale, action: Action): string {\n  switch (action.type) {\n    case ActionType.SET_LOCALE:\n      return action.locale;\n    default:\n      return state;\n  }\n}\n\nfunction superproject(state: string = 'android', action: Action): string {\n  switch (action.type) {\n    case ActionType.SET_SUPERPROJECT:\n      return action.superproject;\n    default:\n      return state;\n  }\n}\n\nexport interface Translations {\n  isFetching: boolean;\n  html: string;\n  css: string;\n}\n\nfunction translations(state: Translations = { isFetching: false, html: '', css: '' }, action: Action): Translations {\n  switch (action.type) {\n    case ActionType.REQUEST_TRANSLATIONS:\n      return Object.assign({}, state, {\n        isFetching: true,\n        html: '',\n        css: '',\n      });\n    case ActionType.RECEIVE_TRANSLATIONS:\n      return Object.assign({}, state, {\n        isFetching: false,\n        html: action.html,\n        css: action.css,\n      });\n    default:\n      return state;\n  }\n}\n\nconst rootReducer = combineReducers({\n  useDarkTheme,\n  query,\n  locale,\n  superproject,\n  translations\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import throttle from 'lodash.throttle';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore } from 'redux';\nimport thunkMiddleware from 'redux-thunk';\n\nimport App from './components/App';\nimport { getLocalStorageItem, setLocalStorageItem } from './utils/LocalStorageUtils';\nimport rootReducer from './reducers';\n\nconst STORE_KEY = 'translations-state';\nconst store = createStore(rootReducer, getLocalStorageItem(STORE_KEY), applyMiddleware(thunkMiddleware));\nstore.subscribe(throttle(() => {\n  const { query, translations, ...state } = store.getState();\n  setLocalStorageItem(STORE_KEY, state);\n}, 1000));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","export function getLocalStorageItem(key: string): any | undefined {\n  const item = localStorage.getItem(key);\n  if (!item) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(item);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function setLocalStorageItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"fetchTranslationTable\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"aaa79e59bddbae38ba68.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}