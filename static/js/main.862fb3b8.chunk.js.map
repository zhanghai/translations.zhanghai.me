{"version":3,"sources":["constants/Colors.ts","constants/Themes.ts","utils/LocaleUtils.ts","constants/Locales.ts","constants/Superprojects.ts","state/FetchTranslationTable.js","state/Slices.ts","components/DarkThemeButton.tsx","components/ElevateOnScroll.ts","components/AppBarTextField.tsx","components/LocaleSelect.tsx","utils/HistoryUtils.ts","components/QueryTextField.tsx","components/SuperprojectSelect.tsx","components/MainAppBar.tsx","components/TranslationTableHead.tsx","components/StatefulTranslationHeadTable.tsx","components/TranslationTableCell.tsx","components/TranslationTableRow.tsx","components/TranslationTableStyles.tsx","components/StatefulTranslationTable.tsx","components/Main.tsx","components/App.tsx","state/Store.ts","utils/LocalStorageUtils.ts","index.tsx","state/FetchTranslationTable.worker.tsx"],"names":["googleBlue","googleGrey","options","mixins","toolbar","minHeight","overrides","MuiMenuItem","root","paddingTop","paddingBottom","MuiTable","tableLayout","MuiTableCell","overflowWrap","getLocaleName","locale","match","languageCode","languageName","Iso6391","getName","countryCode","countryName","Iso31661Alpha2","getCountry","Object","fromEntries","entries","android","gnome","map","code","name","id","worker","fetchTranslationTable","query","useRegularExpression","superproject","a","terminate","Worker","table","useDarkThemeSlice","createSlice","initialState","window","matchMedia","matches","reducers","toggleDarkTheme","state","actions","querySlice","setQuery","action","payload","useRegularExpressionSlice","toggleRegularExpression","initialSuperproject","superprojects","localeSlice","locales","some","navigator","language","setLocale","superprojectSlice","setSuperproject","fetchTranslations","createAsyncThunk","arg","thunkApi","getState","translationsSlice","isFetching","html","extraReducers","builder","addCase","pending","fulfilled","rootReducer","combineReducers","reducer","mapDispatch","onClick","connect","useDarkTheme","props","IconButton","aria-label","color","edge","Brightness5Outlined","Brightness4Outlined","ElevationScroll","trigger","useScrollTrigger","disableHysteresis","threshold","React","cloneElement","children","elevation","useStyles","makeStyles","theme","isLightTheme","palette","type","createStyles","inputRoot","backgroundColor","borderRadius","shape","inputInput","height","lineHeight","AppBarTextField","classes","TextField","hiddenLabel","variant","InputProps","disableUnderline","input","inputProps","placeholder","value","dispatch","onChange","useNativeSelect","isMobile","SelectItem","MenuItem","fullWidth","select","SelectProps","native","event","target","key","getQueryParameters","url","URL","location","href","searchParams","useRegularExpressionColorSecondary","text","hint","onSubmit","onUseRegularExpressionClick","useState","setValue","debouncedOnSubmit","useCallback","debounce","inputRef","useRef","useEffect","listener","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLElement","isContentEditable","document","designMode","altKey","ctrlKey","metaKey","shiftKey","isComposing","current","focus","addEventListener","removeEventListener","autoFocus","startAdornment","InputAdornment","position","SearchOutlined","endAdornment","Tooltip","title","colorSecondary","onMouseDown","preventDefault","SvgIcon","d","mdiRegex","transform","appBar","background","default","memo","AppBar","className","Toolbar","Box","display","flex","maxWidth","mr","TRANSLATION_COLUMNS","label","width","TableHead","TableRow","column","TableCell","style","hasTable","translations","Table","aria-hidden","TranslationTableHead","cell","nodes","Array","lastIndex","start","end","push","substring","length","highlightMatches","component","link","rel","OpenInNewOutlined","hover","TranslationTableCell","row","emptyRow","english","translation","project","TableBody","TranslationTableRow","hasQuery","flexDirection","alignItems","justifyContent","CircularProgress","thickness","size","dangerouslySetInnerHTML","__html","TranslateOutlined","fontSize","Typography","Main","MainAppBar","createMuiTheme","primary","main","secondary","paper","querySelector","setAttribute","ThemeProvider","CssBaseline","localStorageState","item","localStorage","getItem","JSON","parse","e","getLocalStorageItem","useRegularExpressionString","undefined","toString","queryParametersState","pickby","preloadedState","assign","store","configureStore","subscribe","useRegularExpressionBoolean","queryParameters","from","keys","delete","set","history","replaceState","setQueryParameters","throttle","setItem","stringify","ReactDOM","render","StrictMode","getElementById","addMethods","methods","module","exports","w"],"mappings":"qRAAaA,EACN,UADMA,EAEN,UAGMC,EACP,UADOA,EAEN,UAFMA,EAGN,UAHMA,EASN,UATMA,EAUN,UAVMA,EAWN,UCZDC,EAAwB,CAC5BC,OAAQ,CACNC,QAAS,CACPC,UAAW,GACX,4BAA6B,CAC3BA,UAAW,MAIjBC,UAAW,CACTC,YAAa,CACXC,KAAM,CACJC,WAAY,GACZC,cAAe,KAGnBC,SAAU,CACRH,KAAM,CACJI,YAAa,UAGjBC,aAAc,CACZL,KAAM,CACJM,aAAc,iB,8JCxBf,SAASC,EAAcC,GAC5B,IAAMC,EAAQD,EAAOC,MAAM,gCAC3B,IAAKA,EACH,OAAOD,EAET,IAAME,EAAeD,EAAM,GACrBE,EAAeC,IAAQC,QAAQH,GAC/BI,EAAcL,EAAM,GACpBM,EAAeD,GAAeE,IAAeC,WAAWH,IAAiB,GAC/E,OAAKC,EAGG,GAAN,OAAUJ,EAAV,aAA2BI,EAA3B,KAFOJ,ECXIO,I,EAAAA,SAAOC,YAAYD,OAAOE,QAAQ,CAC/CC,QAAS,CACP,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,QACA,MAEFC,MAAO,CACL,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,QACA,QACA,QACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KAC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","file":"static/js/main.862fb3b8.chunk.js","sourcesContent":["export const googleBlue = {\n  300: '#8ab4f8',\n  500: '#4285f4',\n}\n\nexport const googleGrey = {\n  50: '#f8f9fa',\n  100: '#f1f3f4',\n  200: '#e8eaed',\n  300: '#dadce0',\n  400: '#bdc1c6',\n  500: '#9aa0a6',\n  600: '#80868b',\n  700: '#5f6368',\n  800: '#3c4043',\n  850: '#313235',\n  900: '#202124',\n}\n","import { createMuiTheme, ThemeOptions } from '@material-ui/core';\n\nimport { googleBlue, googleGrey } from './Colors';\n\nconst options: ThemeOptions = {\n  mixins: {\n    toolbar: {\n      minHeight: 56,\n      '@media (min-width: 600px)': {\n        minHeight: 64,\n      },\n    },\n  },\n  overrides: {\n    MuiMenuItem: {\n      root: {\n        paddingTop: 12,\n        paddingBottom: 12,\n      },\n    },\n    MuiTable: {\n      root: {\n        tableLayout: 'fixed',\n      },\n    },\n    MuiTableCell: {\n      root: {\n        overflowWrap: 'break-word',\n      },\n    },\n  },\n};\n\n// We need a new theme instance every time we toggle dark theme.\nexport function createLightTheme() {\n  return createMuiTheme({\n    ...options,\n    palette: {\n      primary: {\n        main: googleBlue[500],\n      },\n      secondary: {\n        main: googleBlue[500],\n      },\n      background: {\n        default: '#ffffff',\n      },\n    },\n  });\n}\n\nexport function createDarkTheme() {\n  return createMuiTheme({\n    ...options,\n    palette: {\n      primary: {\n        main: googleBlue[300],\n      },\n      secondary: {\n        main: googleBlue[300],\n      },\n      background: {\n        default: googleGrey[900],\n        paper: googleGrey[800],\n      },\n      type: 'dark',\n    },\n  });\n}\n","import Iso6391 from 'iso-639-1';\nimport Iso31661Alpha2 from 'iso-3166-1-alpha-2';\n\nexport function getLocaleName(locale: string): string {\n  const match = locale.match(/^([a-z]{2})(?:-([A-Z]{2}))?$/);\n  if (!match) {\n    return locale;\n  }\n  const languageCode = match[1];\n  const languageName = Iso6391.getName(languageCode);\n  const countryCode = match[2];\n  const countryName = (countryCode && Iso31661Alpha2.getCountry(countryCode)) || '';\n  if (!countryName) {\n    return languageName;\n  } else {\n    return `${languageName} (${countryName})`;\n  }\n}\n","import { getLocaleName } from '../utils/LocaleUtils';\n\nexport default Object.fromEntries(Object.entries({\n  android: [\n    'af',\n    'am',\n    'ar',\n    'as',\n    'az',\n    'be',\n    'bg',\n    'bn',\n    'bs',\n    'ca',\n    'cs',\n    'da',\n    'de',\n    'el',\n    'en-AU',\n    'en-CA',\n    'en-GB',\n    'en-IN',\n    'en-SG',\n    'es',\n    'et',\n    'eu',\n    'fa',\n    'fi',\n    'fr',\n    'gl',\n    'gu',\n    'he',\n    'hi',\n    'hr',\n    'hu',\n    'hy',\n    'id',\n    'is',\n    'it',\n    'ja',\n    'ka',\n    'kk',\n    'km',\n    'kn',\n    'ko',\n    'ky',\n    'lo',\n    'lt',\n    'lv',\n    'mk',\n    'ml',\n    'mn',\n    'mr',\n    'ms',\n    'my',\n    'nb',\n    'ne',\n    'nl',\n    'no',\n    'or',\n    'pa',\n    'pl',\n    'pt',\n    'pt-BR',\n    'pt-PT',\n    'ro',\n    'ru',\n    'si',\n    'sk',\n    'sl',\n    'sq',\n    'sr',\n    'sv',\n    'sw',\n    'ta',\n    'te',\n    'th',\n    'tl',\n    'tr',\n    'uk',\n    'ur',\n    'uz',\n    'vi',\n    'zh-CN',\n    'zh-HK',\n    'zh-TW',\n    'zu',\n  ],\n  gnome: [\n    'af',\n    'ak',\n    'am',\n    'an',\n    'ar',\n    'as',\n    'az',\n    'be',\n    'bg',\n    'bn',\n    'bo',\n    'br',\n    'bs',\n    'ca',\n    'ce',\n    'cs',\n    'cy',\n    'da',\n    'de',\n    'dv',\n    'dz',\n    'el',\n    'en-AU',\n    'en-CA',\n    'en-GB',\n    'eo',\n    'es',\n    'et',\n    'eu',\n    'fa',\n    'fi',\n    'fr',\n    'fy',\n    'ga',\n    'gd',\n    'gl',\n    'gn',\n    'gu',\n    'gv',\n    'ha',\n    'he',\n    'hi',\n    'hr',\n    'hu',\n    'hy',\n    'ia',\n    'id',\n    'ig',\n    'io',\n    'is',\n    'it',\n    'ja',\n    'ka',\n    'kg',\n    'kk',\n    'km',\n    'kn',\n    'ko',\n    'ks',\n    'ku',\n    'ky',\n    'la',\n    'li',\n    'ln',\n    'lo',\n    'lt',\n    'lv',\n    'mg',\n    'mi',\n    'mk',\n    'ml',\n    'mn',\n    'mr',\n    'ms',\n    'my',\n    'nb',\n    'ne',\n    'nl',\n    'nn',\n    'oc',\n    'or',\n    'os',\n    'pa',\n    'pl',\n    'ps',\n    'pt',\n    'ro',\n    'ru',\n    'rw',\n    'sd',\n    'se',\n    'si',\n    'sk',\n    'sl',\n    'sq',\n    'sr',\n    'sv',\n    'sw',\n    'ta',\n    'te',\n    'tg',\n    'th',\n    'tk',\n    'tr',\n    'ts',\n    'ug',\n    'uk',\n    'ur',\n    'uz',\n    'vi',\n    'wa',\n    'xh',\n    'yi',\n    'yo',\n    'zh-CN',\n    'zh-HK',\n    'zh-TW',\n    'zu',\n  ],\n}).map(([superproject, codes]) => [superproject, codes.map(code => ({ code, name: getLocaleName(code) }))]));\n","export default [\n  {\n    id: 'android',\n    name: 'Android',\n  },\n  {\n    id: 'gnome',\n    name: 'GNOME',\n  },\n];\n","// eslint-disable-next-line import/no-webpack-loader-syntax\nimport Worker from 'workerize-loader!./FetchTranslationTable.worker';\n\nlet worker = null;\n\nexport async function fetchTranslationTable(query, useRegularExpression, locale, superproject) {\n  if (worker) {\n    worker.terminate();\n  }\n  if (!query) {\n    return '';\n  }\n  worker = Worker();\n  const table = await worker.fetchTranslationTable(query, useRegularExpression, locale, superproject);\n  worker.terminate();\n  return table;\n}\n","import { createAsyncThunk, createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport locales from '../constants/Locales';\nimport superprojects from '../constants/Superprojects';\nimport { fetchTranslationTable } from './FetchTranslationTable';\n\nconst useDarkThemeSlice = createSlice({\n  name: 'useDarkTheme',\n  initialState: window.matchMedia ? window.matchMedia('(prefers-color-scheme: dark)').matches : false,\n  reducers: {\n    toggleDarkTheme: state => !state,\n  },\n});\nexport const { toggleDarkTheme } = useDarkThemeSlice.actions;\n\nconst querySlice = createSlice({\n  name: 'query',\n  initialState: '',\n  reducers: {\n    setQuery: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setQuery } = querySlice.actions;\n\nconst useRegularExpressionSlice = createSlice({\n  name: 'useRegularExpression',\n  initialState: false,\n  reducers: {\n    toggleRegularExpression: state => !state,\n  },\n});\nexport const { toggleRegularExpression } = useRegularExpressionSlice.actions;\n\nconst initialSuperproject = superprojects[0].id;\n\nconst localeSlice = createSlice({\n  name: 'locale',\n  initialState: locales[initialSuperproject].some(locale => locale.code === navigator.language) ? navigator.language\n      : 'zh-CN',\n  reducers: {\n    setLocale: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setLocale } = localeSlice.actions;\n\nconst superprojectSlice = createSlice({\n  name: 'superproject',\n  initialState: initialSuperproject,\n  reducers: {\n    setSuperproject: (state, action: PayloadAction<string>) => action.payload,\n  },\n});\nexport const { setSuperproject } = superprojectSlice.actions;\n\ninterface Translations {\n  isFetching: boolean;\n  html: string;\n}\nexport const fetchTranslations = createAsyncThunk<string, void, {\n  state: {\n    [querySlice.name]: ReturnType<typeof querySlice.reducer>,\n    [useRegularExpressionSlice.name]: ReturnType<typeof useRegularExpressionSlice.reducer>,\n    [localeSlice.name]: ReturnType<typeof localeSlice.reducer>,\n    [superprojectSlice.name]: ReturnType<typeof superprojectSlice.reducer>,\n  },\n}>('fetchTranslations', async (arg, thunkApi) => {\n  const { query, useRegularExpression, locale, superproject } = thunkApi.getState();\n  return await fetchTranslationTable(query, useRegularExpression, locale, superproject);\n});\nconst translationsSlice = createSlice({\n  name: 'translations',\n  initialState: {\n    isFetching: false,\n    html: '',\n  } as Translations,\n  reducers: {},\n  extraReducers: builder => builder\n      .addCase(fetchTranslations.pending, () => ({\n        isFetching: true,\n        html: '',\n      }))\n      .addCase(fetchTranslations.fulfilled, (state, action) => ({\n        isFetching: false,\n        html: action.payload,\n      })),\n});\n\nexport const rootReducer = combineReducers({\n  [useDarkThemeSlice.name]: useDarkThemeSlice.reducer,\n  [querySlice.name]: querySlice.reducer,\n  [useRegularExpressionSlice.name]: useRegularExpressionSlice.reducer,\n  [localeSlice.name]: localeSlice.reducer,\n  [superprojectSlice.name]: superprojectSlice.reducer,\n  [translationsSlice.name]: translationsSlice.reducer,\n});\n","import { IconButton } from '@material-ui/core';\nimport { Brightness4Outlined, Brightness5Outlined } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { toggleDarkTheme } from '../state/Slices';\nimport { RootState } from '../state/Store';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ninterface DispatchProps {\n  onClick: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction DarkThemeButton(props: Props) {\n  return (\n      <IconButton aria-label={'Toggle dark theme'} color='inherit' edge='end' onClick={props.onClick}>\n        {props.useDarkTheme ? <Brightness5Outlined /> : <Brightness4Outlined />}\n      </IconButton>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme,\n  };\n}\n\nconst mapDispatch: DispatchProps = {\n  onClick: toggleDarkTheme,\n}\n\nexport default connect(mapState, mapDispatch)(DarkThemeButton);\n","import useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport React from 'react';\n\ninterface Props {\n    children: React.ReactElement;\n}\n\nexport default function ElevationScroll(props: Props) {\n    const trigger = useScrollTrigger({\n        disableHysteresis: true,\n        threshold: 0,\n    });\n    return React.cloneElement(props.children, { elevation: trigger ? 4 : 0, });\n}\n","import { BaseTextFieldProps, FilledInputProps, TextField } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport { googleGrey } from '../constants/Colors';\n\ninterface Props extends BaseTextFieldProps {\n  onBlur?: FilledInputProps['onBlur'];\n  onChange?: FilledInputProps['onChange'];\n  onFocus?: FilledInputProps['onFocus'];\n  InputProps?: Partial<FilledInputProps>;\n  inputProps?: FilledInputProps['inputProps'];\n}\n\nconst useStyles = makeStyles((theme: Theme) => {\n  const isLightTheme = theme.palette.type === 'light';\n  return createStyles({\n    inputRoot: {\n      backgroundColor: isLightTheme ? googleGrey[100] : googleGrey[850],\n      borderRadius: 2 * theme.shape.borderRadius,\n      '&:hover': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-focused': {\n        backgroundColor: isLightTheme ? googleGrey[200] : googleGrey[800],\n      },\n      '&.Mui-disabled': {\n        backgroundColor: isLightTheme ? googleGrey[50] : googleGrey[850],\n      },\n    },\n    inputInput: {\n      height: 24,\n      paddingTop: 11,\n      paddingBottom: 11,\n      lineHeight: '24px',\n    }\n  });\n});\n\nexport default function AppBarTextField(props: Props) {\n  const classes = useStyles();\n  return (\n      <TextField\n          {...props} hiddenLabel variant='filled' InputProps={{\n            ...props.InputProps,\n            disableUnderline: true,\n            classes: {\n              ...props.InputProps?.classes,\n              root: classes.inputRoot,\n              input: classes.inputInput,\n            },\n          }} inputProps={{\n            'aria-label': props.placeholder,\n            ...props.inputProps,\n          }} />\n  );\n}\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\n\nimport locales from '../constants/Locales';\nimport { fetchTranslations, setLocale } from '../state/Slices';\nimport { AppDispatch, RootState } from '../state/Store';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  superproject: string;\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction LocaleSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {locales[props.superproject].map(locale => (\n            <SelectItem key={locale.code} value={locale.code}>\n              {locale.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    superproject: state.superproject,\n    value: state.locale,\n  }\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setLocale(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(LocaleSelect);\n","export function getQueryParameters(): { [key: string]: string } {\n  const url = new URL(window.location.href);\n  return Object.fromEntries(url.searchParams);\n}\n\nexport function setQueryParameters(queryParameters: { [key: string]: string }) {\n  const url = new URL(window.location.href);\n  const searchParams = url.searchParams;\n  for (const name of Array.from(searchParams.keys())) {\n    searchParams.delete(name);\n  }\n  for (const [name, value] of Object.entries(queryParameters)) {\n    searchParams.set(name, value);\n  }\n  window.history.replaceState(null, document.title, url.toString());\n}\n","import debounce from 'lodash.debounce';\nimport { IconButton, InputAdornment, SvgIcon, Tooltip } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { SearchOutlined } from '@material-ui/icons';\nimport { mdiRegex } from '@mdi/js';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { fetchTranslations, setQuery, toggleRegularExpression } from '../state/Slices';\nimport { AppDispatch, RootState } from '../state/Store';\nimport { getQueryParameters } from '../utils/HistoryUtils';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  useRegularExpression: boolean;\n}\n\ninterface DispatchProps {\n  onSubmit: (value: string) => void;\n  onUseRegularExpressionClick: () => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nconst useStyles = makeStyles(theme => ({\n  useRegularExpressionColorSecondary: {\n    color: theme.palette.text.hint,\n  },\n}));\n\nfunction QueryTextField(props: Props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(() => getQueryParameters().query || '');\n  const debouncedOnSubmit = useCallback(debounce(props.onSubmit, 500), [props.onSubmit]);\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setValue(event.target.value);\n    debouncedOnSubmit(event.target.value);\n  }\n  const handleUseRegularExpressionClick = () => props.onUseRegularExpressionClick()\n  // Prevent focus on mouse click.\n  const handleUseRegularExpressionMouseDown = (event: React.MouseEvent) => event.preventDefault();\n  const inputRef = useRef<HTMLInputElement>();\n  useEffect(() => {\n    const listener = (event: KeyboardEvent) => {\n      const target = event.target;\n      if (target instanceof HTMLInputElement || target instanceof HTMLSelectElement\n          || target instanceof HTMLTextAreaElement || (target instanceof HTMLElement && target.isContentEditable)\n          || document.designMode === 'on') {\n        return;\n      }\n      if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey || event.isComposing || event.key !== '/') {\n        return;\n      }\n      inputRef.current!!.focus();\n    };\n    document.addEventListener('keyup', listener);\n    return () => document.removeEventListener('keyup', listener);\n  }, [inputRef]);\n  return (\n      <AppBarTextField\n          autoFocus fullWidth placeholder='Search' inputRef={inputRef} value={value} InputProps={{\n            startAdornment: (\n                <InputAdornment position='start'>\n                  <SearchOutlined />\n                </InputAdornment>\n            ),\n            endAdornment: (\n                <InputAdornment position='end'>\n                  <Tooltip title='Regular expression'>\n                    <IconButton\n                        aria-label='Toggle regular expression'\n                        color={props.useRegularExpression ? 'primary' : 'secondary'} edge='end'\n                        classes={{ colorSecondary: classes.useRegularExpressionColorSecondary }}\n                        onClick={handleUseRegularExpressionClick} onMouseDown={handleUseRegularExpressionMouseDown}>\n                      <SvgIcon>\n                        <path d={mdiRegex} transform='translate(-1, -1)' />\n                      </SvgIcon>\n                    </IconButton>\n                  </Tooltip>\n                </InputAdornment>\n            ),\n      }} onChange={handleChange} />\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useRegularExpression: state.useRegularExpression,\n  };\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onSubmit(value) {\n      dispatch(setQuery(value));\n      dispatch(fetchTranslations());\n    },\n    onUseRegularExpressionClick() {\n      dispatch(toggleRegularExpression());\n      dispatch(fetchTranslations());\n    },\n  }\n}\n\nexport default connect(mapState, mapDispatch)(QueryTextField);\n","import { MenuItem } from '@material-ui/core';\nimport React from 'react';\nimport { isMobile } from 'react-device-detect';\nimport { connect } from 'react-redux';\n\nimport superprojects from '../constants/Superprojects';\nimport { fetchTranslations, setSuperproject } from '../state/Slices';\nimport { AppDispatch, RootState } from '../state/Store';\nimport AppBarTextField from './AppBarTextField';\n\ninterface StateProps {\n  value: string;\n}\n\ninterface DispatchProps {\n  onChange: (value: string) => void;\n}\n\ntype Props = StateProps & DispatchProps;\n\nfunction SuperprojectSelect(props: Props) {\n  const useNativeSelect = isMobile;\n  const SelectItem = useNativeSelect ? 'option' : MenuItem;\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    props.onChange(event.target.value);\n  }\n  return (\n      <AppBarTextField\n          fullWidth placeholder='Language' select value={props.value} SelectProps={{ native: useNativeSelect }}\n          onChange={handleChange}>\n        {superprojects.map(superproject => (\n            <SelectItem key={superproject.id} value={superproject.id}>\n              {superproject.name}\n            </SelectItem>\n        ))}\n      </AppBarTextField>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    value: state.superproject,\n  }\n}\n\nfunction mapDispatch(dispatch: AppDispatch): DispatchProps {\n  return {\n    onChange(value) {\n      dispatch(setSuperproject(value));\n      dispatch(fetchTranslations());\n    }\n  }\n}\n\nexport default connect(mapState, mapDispatch)(SuperprojectSelect);\n","import { AppBar, Box, Toolbar } from '@material-ui/core';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport React from 'react';\n\nimport DarkThemeButton from './DarkThemeButton';\nimport ElevationOnScroll from './ElevateOnScroll';\nimport LocaleSelect from './LocaleSelect';\nimport QueryTextField from './QueryTextField';\nimport SuperprojectSelect from './SuperprojectSelect';\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n    createStyles({\n      appBar: {\n        backgroundColor: theme.palette.background.default,\n      },\n    }),\n);\n\nexport default React.memo((props: Props) => {\n  const classes = useStyles();\n  return (\n      <ElevationOnScroll>\n        <AppBar color='default' position='fixed' className={classes.appBar}>\n          <Toolbar>\n            <Box display='flex' flex={1}>\n              <Box flex={2} maxWidth={720} mr={1}>\n                <QueryTextField />\n              </Box>\n              <Box flex={1} maxWidth={240} mr={1}>\n                <LocaleSelect />\n              </Box>\n              <Box flex={1} maxWidth={240} mr={1}>\n                <SuperprojectSelect />\n              </Box>\n            </Box>\n            <DarkThemeButton />\n          </Toolbar>\n          {props.children}\n        </AppBar>\n      </ElevationOnScroll>\n  );\n});\n","import { TableCell, TableHead, TableRow } from '@material-ui/core';\nimport React from 'react';\n\ninterface TranslationColumnData {\n  name: string;\n  label: string;\n  width: string;\n}\n\nexport const TRANSLATION_COLUMNS: Array<TranslationColumnData> = [\n  {\n    name: 'english',\n    label: 'English',\n    width: '40%',\n  },\n  {\n    name: 'translation',\n    label: 'Translation',\n    width: '40%',\n  },\n  {\n    name: 'project',\n    label: 'Project',\n    width: '20%',\n  },\n];\n\nexport default React.memo(() => {\n  return (\n      <TableHead>\n        <TableRow>\n          {TRANSLATION_COLUMNS.map(column => (\n              <TableCell key={column.name} style={{ width: column.width }}>\n                {column.label}\n              </TableCell>\n          ))}\n        </TableRow>\n      </TableHead>\n  );\n});\n","import { Table } from '@material-ui/core';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../state/Store';\nimport TranslationTableHead from './TranslationTableHead';\n\ninterface StateProps {\n  hasTable: boolean;\n}\n\ntype Props = StateProps;\n\nfunction StatefulTranslationHeadTable(props: Props) {\n  if (props.hasTable) {\n    return (\n        <Table aria-hidden='true'>\n          <TranslationTableHead />\n        </Table>\n    );\n  } else {\n    return (\n        <></>\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasTable: !!state.translations.html,\n  };\n}\n\nexport default connect(mapState)(StatefulTranslationHeadTable);\n","import { IconButton, TableCell } from '@material-ui/core';\nimport { OpenInNewOutlined } from '@material-ui/icons';\nimport React from 'react';\n\nexport interface TranslationCellData {\n  text: string;\n  link: string;\n  matches?: [number, number][];\n}\n\ninterface Props {\n  cell: TranslationCellData;\n  width: string;\n}\n\nfunction highlightMatches(text: string, matches: [number, number][]): React.ReactNode {\n  const nodes = new Array<React.ReactNode>();\n  let lastIndex = 0;\n  for (const [start, end] of matches) {\n    if (lastIndex < start) {\n      nodes.push(text.substring(lastIndex, start));\n    }\n    nodes.push(<b>{text.substring(start, end)}</b>);\n    lastIndex = end;\n  }\n  if (lastIndex < text.length) {\n    nodes.push(text.substring(lastIndex));\n  }\n  return nodes;\n}\n\nexport default React.memo((props: Props) => {\n  return (\n      <TableCell style={{ width: props.width }}>\n        {props.cell.matches ? highlightMatches(props.cell.text, props.cell.matches) : props.cell.text}\n        <IconButton\n            aria-label='View source' color='inherit' component='a' edge='end' href={props.cell.link} target='_blank'\n            rel='noopener noreferrer'>\n          <OpenInNewOutlined />\n        </IconButton>\n      </TableCell>\n  );\n});\n","import { TableRow } from '@material-ui/core';\nimport React from 'react';\n\nimport TranslationTableCell, { TranslationCellData } from './TranslationTableCell';\nimport { TRANSLATION_COLUMNS } from './TranslationTableHead';\n\nexport interface TranslationRowData {\n  [key: string]: TranslationCellData;\n  english: TranslationCellData;\n  translation: TranslationCellData;\n  project: TranslationCellData;\n}\n\ninterface Props {\n  row: TranslationRowData;\n}\n\nexport default React.memo((props: Props) => {\n  return (\n      <TableRow hover>\n        {TRANSLATION_COLUMNS.map(column => (\n            <TranslationTableCell key={column.name} cell={props.row[column.name]} width={column.width} />\n        ))}\n      </TableRow>\n  );\n});\n","import { Table, TableBody } from '@material-ui/core';\nimport React from 'react';\n\nimport TranslationTableHead from './TranslationTableHead';\nimport TranslationTableRow, { TranslationRowData } from './TranslationTableRow';\n\n// We cannot use JSS styling in components rendered in web worker, because generated class names may clash with the ones\n// generated normally.\nimport './TranslationTable.css';\n\nconst emptyRow: TranslationRowData = {\n  english: {\n    text: '',\n    link: '',\n    matches: [],\n  },\n  translation: {\n    text: '',\n    link: '',\n    matches: [],\n  },\n  project: {\n    text: '',\n    link: '',\n  },\n};\n\nfunction TranslationTableStyles() {\n  // Hidden table to ensure relevant Material-UI styles are loaded.\n  return (\n      <Table style={{ display: 'none' }}>\n        <TranslationTableHead />\n        <TableBody>\n          <TranslationTableRow row={emptyRow} />\n        </TableBody>\n      </Table>\n  );\n}\n\nexport default React.memo(TranslationTableStyles);\n","import { Box, CircularProgress, Typography } from '@material-ui/core';\nimport { TranslateOutlined } from '@material-ui/icons';\nimport React from 'react';\nimport { connect } from 'react-redux';\n\nimport { RootState } from '../state/Store';\nimport TranslationTableStyles from './TranslationTableStyles';\n\ninterface StateProps {\n  hasQuery: boolean;\n  isFetching: boolean;\n  html: string;\n}\n\ntype Props = StateProps;\n\nfunction StatefulTranslationTable(props: Props) {\n  if (props.isFetching) {\n    return (\n        <Box flex={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <CircularProgress thickness={4} size={80} />\n        </Box>\n    );\n  } else if (!props.html) {\n    return (\n        <Box flex={1} display='flex' flexDirection='column' alignItems='center' justifyContent='center'>\n          <TranslateOutlined color='disabled' style={{ fontSize: 240 }} />\n          <Typography color='textSecondary' variant='subtitle1'>\n            {props.hasQuery ? 'No translations found' : 'Type to start searching'}\n          </Typography>\n        </Box>\n    );\n  } else {\n    return (\n        <>\n          <TranslationTableStyles />\n          <div dangerouslySetInnerHTML={{ __html: props.html }} />\n        </>\n    );\n  }\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    hasQuery: !!state.query.length,\n    isFetching: state.translations.isFetching,\n    html: state.translations.html,\n  }\n}\n\nexport default connect(mapState)(StatefulTranslationTable);\n","import { Box, Toolbar } from '@material-ui/core';\nimport React from 'react';\n\nimport MainAppBar from './MainAppBar';\nimport StatefulTranslationHeadTable from './StatefulTranslationHeadTable';\nimport StatefulTranslationTable from './StatefulTranslationTable';\n\nexport default function Main() {\n  return (\n      <Box flex={1} display='flex' flexDirection='column'>\n        <MainAppBar>\n          <StatefulTranslationHeadTable />\n        </MainAppBar>\n        <Toolbar />\n        <StatefulTranslationTable />\n      </Box>\n  );\n}\n","import { CssBaseline } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport { createDarkTheme, createLightTheme } from '../constants/Themes';\nimport { RootState } from '../state/Store';\nimport Main from './Main';\n\ninterface StateProps {\n  useDarkTheme: boolean;\n}\n\ntype Props = StateProps;\n\nfunction App(props: Props) {\n  const theme = props.useDarkTheme ? createDarkTheme() : createLightTheme();\n  useEffect(() => {\n    document.querySelector('meta[name=\"color-scheme\"]')!!.setAttribute('content', theme.palette.type);\n    document.querySelector('meta[name=\"theme-color\"]')!!.setAttribute('content', theme.palette.background.default);\n    // eslint-disable-next-line\n  }, [props.useDarkTheme]);\n  return (\n      <ThemeProvider theme={theme}>\n        <CssBaseline />\n        <Main />\n      </ThemeProvider>\n  );\n}\n\nfunction mapState(state: RootState): StateProps {\n  return {\n    useDarkTheme: state.useDarkTheme\n  };\n}\n\nexport default connect(mapState)(App);\n","import pickby from 'lodash.pickby';\nimport throttle from 'lodash.throttle';\nimport { configureStore } from '@reduxjs/toolkit';\n\nimport { getQueryParameters, setQueryParameters } from '../utils/HistoryUtils';\nimport { getLocalStorageItem, setLocalStorageItem } from '../utils/LocalStorageUtils';\nimport { fetchTranslations, rootReducer } from './Slices';\n\nconst STATE_KEY = 'translations-state';\nconst localStorageState = getLocalStorageItem(STATE_KEY);\nlet { query, useRegularExpression: useRegularExpressionString, locale, superproject } = getQueryParameters();\nconst useRegularExpression = useRegularExpressionString !== undefined ? useRegularExpressionString === true.toString()\n    : undefined;\nconst queryParametersState = pickby({ query, useRegularExpression, locale, superproject },\n        value => value !== undefined);\nconst preloadedState = Object.assign({}, localStorageState, queryParametersState);\n\nconst store = configureStore({\n  reducer: rootReducer,\n  preloadedState,\n});\nexport default store;\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\nstore.subscribe(() => {\n  const { query, useRegularExpression: useRegularExpressionBoolean, locale, superproject } = store.getState();\n  const useRegularExpression = useRegularExpressionBoolean.toString()\n  setQueryParameters({ query, useRegularExpression, locale, superproject });\n});\nstore.subscribe(throttle(() => {\n  const { query, useRegularExpression, translations, ...state } = store.getState();\n  setLocalStorageItem(STATE_KEY, state);\n}, 1000));\n\nif (preloadedState.query) {\n  store.dispatch(fetchTranslations());\n}\n","export function getLocalStorageItem(key: string): any | undefined {\n  const item = localStorage.getItem(key);\n  if (!item) {\n    return undefined;\n  }\n  try {\n    return JSON.parse(item);\n  } catch (e) {\n    return undefined;\n  }\n}\n\nexport function setLocalStorageItem(key: string, value: any) {\n  localStorage.setItem(key, JSON.stringify(value));\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App';\nimport store from './state/Store';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","\n\t\t\t\tvar addMethods = require(\"../../node_modules/workerize-loader/dist/rpc-wrapper.js\")\n\t\t\t\tvar methods = [\"fetchTranslationTable\"]\n\t\t\t\tmodule.exports = function() {\n\t\t\t\t\tvar w = new Worker(__webpack_public_path__ + \"fa7051d40a31a100de16.worker.js\", { name: \"[hash].worker.js\" })\n\t\t\t\t\taddMethods(w, methods)\n\t\t\t\t\t\n\t\t\t\t\treturn w\n\t\t\t\t}\n\t\t\t"],"sourceRoot":""}